{"version":3,"sources":["common/constants.js","api/getRequests.js","components/Details.js","components/Navbar.js","App.js","index.js"],"names":["repoList","getDetails","repoName","a","fetch","res","ok","Error","json","fullData","result","full_name","description","stargazers_count","Title","styled","h1","DescLabel","section","Wrapper","LoadingMsg","ErrorMsg","Details","repo","useQuery","data","status","src","height","width","Buttons","Button","button","ActiveRepo","Navbar","currentRepo","setNextRepo","findRepo","changeRepo","direction","currentRepoIndex","findIndex","step","next","length","map","item","onClick","queryClient","QueryClient","App","useState","setRepo","client","nextRepo","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAKaA,EAAW,CACtB,gBACA,gBACA,cACA,kBACA,uBACA,iBACA,6BCVWC,EAAU,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,sEACNC,MAAM,GAAD,ODHG,iCCGH,OAAmBF,IADlB,WAClBG,EADkB,QAEfC,GAFe,sBAGhB,IAAIC,MAAM,+BAHM,uBAKDF,EAAIG,OALH,cAKlBC,EALkB,OAMlBC,EAAS,CACbC,UAAWF,EAASE,UACpBC,YAAaH,EAASG,YACtBC,iBAAkBJ,EAASI,kBATL,kBAWjBH,GAXiB,4CAAH,sD,OCQjBI,EAAQC,IAAOC,GAAV,iGAMLC,EAAYF,IAAOG,QAAV,iDAITC,EAAUJ,IAAOG,QAAV,yDAKPE,EAAaL,IAAOG,QAAV,oFAMVG,EAAWN,IAAOG,QAAV,qFAyCCI,EAnCC,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjB,EAAyBC,mBAAS,CAAC,UAAWD,IAAO,kBAAMtB,EAAWsB,MAA9DE,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAEd,OACE,eAACP,EAAD,WACE,cAACL,EAAD,4BACY,YAAXY,GACC,+BACE,+BACE,cAACT,EAAD,0BADF,OAEGQ,QAFH,IAEGA,OAFH,EAEGA,EAAMd,aAET,+BACE,cAACM,EAAD,4BADF,OAEGQ,QAFH,IAEGA,OAFH,EAEGA,EAAMb,eAET,+BACE,cAACK,EAAD,+BADF,OAEGQ,QAFH,IAEGA,OAFH,EAEGA,EAAMZ,uBAKD,YAAXa,GACC,eAACN,EAAD,wBAEE,qBAAKO,IF5Db,qHE4D8BC,OAAO,OAAOC,MAAM,YAIlC,UAAXH,GAAsB,cAACL,EAAD,sCC7DvBP,EAAQC,IAAOC,GAAV,iGAMLG,EAAUJ,IAAOG,QAAV,4FAMPY,EAAUf,IAAOG,QAAV,sEAKPa,EAAShB,IAAOiB,OAAV,wNAWNC,EAAalB,IAAOG,QAAV,8EA2CDgB,EAtCA,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,YACvBC,EAAW,SAACd,GAAD,OAAUA,IAASY,GAE9BG,EAAa,SAACC,GAClB,IAAMC,EAAmBxC,EAASyC,UAAUJ,GACtCK,EAAqB,SAAdH,EAAuB,GAAK,EACnCI,EACJH,EAAmBE,GAAQ1C,EAAS4C,OAChC,EACAJ,EAAmBE,EAAO,EAC1B1C,EAAS4C,OAAS,EAClBJ,EAAmBE,EAEzBN,EAAYO,IAGd,OACE,eAAC,EAAD,WACE,cAAC,EAAD,oCACA,6BACG3C,EAAS6C,KAAI,SAACC,GACb,OAAOA,IAASX,EACd,6BACE,cAACF,EAAD,UAAaa,KADNA,GAIT,6BAAgBA,GAAPA,QAIf,eAAChB,EAAD,WACE,cAACC,EAAD,CAAQgB,QAAS,kBAAMT,EAAW,SAAlC,kBACA,cAACP,EAAD,CAAQgB,QAAS,kBAAMT,EAAW,SAAlC,yBCtDFnB,EAAUJ,IAAOG,QAAV,gKAUP8B,EAAc,IAAIC,cAmBTC,MAjBf,WACE,MAAwBC,mBAASnD,EAAS,IAA1C,mBAAOuB,EAAP,KAAa6B,EAAb,KAMA,OACE,cAAC,sBAAD,CAAqBC,OAAQL,EAA7B,SACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAQb,YAAaZ,EAAMa,YAPb,SAACkB,GACnBF,EAAQpD,EAASsD,OAOb,cAAC,EAAD,CAAS/B,KAAMA,UCnCvBgC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7e9e48bc.chunk.js","sourcesContent":["export const MAIN_API_URL = 'https://api.github.com/repos/';\r\n\r\nexport const spinnerUrl =\r\n  'https://powerusers.microsoft.com/t5/image/serverpage/image-id/118082i204C32E01666789C/image-size/large?v=v2&px=999';\r\n\r\nexport const repoList = [\r\n  'eslint/eslint',\r\n  'brocc-ab/test',\r\n  'babel/babel',\r\n  'webpack/webpack',\r\n  'storybooks/storybook',\r\n  'facebook/react',\r\n  'tannerlinsley/react-query',\r\n];\r\n","import { MAIN_API_URL } from '../common/constants';\r\n\r\nexport const getDetails = async (repoName) => {\r\n  const res = await fetch(`${MAIN_API_URL}${repoName}`);\r\n  if (!res.ok) {\r\n    throw new Error('Network response was not ok');\r\n  }\r\n  const fullData = await res.json();\r\n  const result = {\r\n    full_name: fullData.full_name,\r\n    description: fullData.description,\r\n    stargazers_count: fullData.stargazers_count,\r\n  };\r\n  return result;\r\n};\r\n","import React from 'react';\r\nimport { useQuery } from 'react-query';\r\nimport styled from 'styled-components';\r\n\r\n// api\r\nimport { getDetails } from '../api/getRequests';\r\n\r\n// constants\r\nimport { spinnerUrl } from '../common/constants';\r\n\r\nconst Title = styled.h1`\r\n  font-size: 1.5em;\r\n  text-align: center;\r\n  color: palevioletred;\r\n`;\r\n\r\nconst DescLabel = styled.section`\r\n  font-weight: 700;\r\n`;\r\n\r\nconst Wrapper = styled.section`\r\n  padding: 4em;\r\n  flex: 4;\r\n`;\r\n\r\nconst LoadingMsg = styled.section`\r\n  color: blue;\r\n  font-weight: 700;\r\n  font-size: 1em;\r\n`;\r\n\r\nconst ErrorMsg = styled.section`\r\n  color: red;\r\n  font-weight: 700;\r\n  font-size: 1.5em;\r\n`;\r\n\r\nconst Details = ({ repo }) => {\r\n  const { data, status } = useQuery(['details', repo], () => getDetails(repo));\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Title>Repo details:</Title>\r\n      {status === 'success' && (\r\n        <ul>\r\n          <li>\r\n            <DescLabel>Repo name: </DescLabel>\r\n            {data?.full_name}\r\n          </li>\r\n          <li>\r\n            <DescLabel>Description: </DescLabel>\r\n            {data?.description}\r\n          </li>\r\n          <li>\r\n            <DescLabel>Count of stars: </DescLabel>\r\n            {data?.stargazers_count}\r\n          </li>\r\n        </ul>\r\n      )}\r\n\r\n      {status === 'loading' && (\r\n        <LoadingMsg>\r\n          Loading...\r\n          <img src={spinnerUrl} height=\"18px\" width=\"18px\"></img>\r\n        </LoadingMsg>\r\n      )}\r\n\r\n      {status === 'error' && <ErrorMsg>Error fetching data</ErrorMsg>}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Details;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n// constants\r\nimport { repoList } from '../common/constants';\r\n\r\nconst Title = styled.h1`\r\n  font-size: 1.5em;\r\n  text-align: center;\r\n  color: palevioletred;\r\n`;\r\n\r\nconst Wrapper = styled.section`\r\n  padding: 4em;\r\n  flex: 1;\r\n  border-right: 1px dashed brown;\r\n`;\r\n\r\nconst Buttons = styled.section`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  display: inline-block;\r\n  color: palevioletred;\r\n  font-size: 1em;\r\n  margin: 1em;\r\n  padding: 0.25em 1em;\r\n  border: 2px solid palevioletred;\r\n  border-radius: 3px;\r\n  display: block;\r\n`;\r\n\r\nconst ActiveRepo = styled.section`\r\n  border: 1px dotted brown;\r\n  font-weight: 700;\r\n`;\r\n\r\nconst Navbar = ({ currentRepo, setNextRepo }) => {\r\n  const findRepo = (repo) => repo === currentRepo;\r\n\r\n  const changeRepo = (direction) => {\r\n    const currentRepoIndex = repoList.findIndex(findRepo);\r\n    const step = direction === 'next' ? 1 : -1;\r\n    const next =\r\n      currentRepoIndex + step >= repoList.length\r\n        ? 0\r\n        : currentRepoIndex + step < 0\r\n        ? repoList.length - 1\r\n        : currentRepoIndex + step;\r\n\r\n    setNextRepo(next);\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Title>List of repositaries:</Title>\r\n      <ul>\r\n        {repoList.map((item) => {\r\n          return item === currentRepo ? (\r\n            <li key={item}>\r\n              <ActiveRepo>{item}</ActiveRepo>\r\n            </li>\r\n          ) : (\r\n            <li key={item}>{item}</li>\r\n          );\r\n        })}\r\n      </ul>\r\n      <Buttons>\r\n        <Button onClick={() => changeRepo('prev')}>Prev</Button>\r\n        <Button onClick={() => changeRepo('next')}>Next</Button>\r\n      </Buttons>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n  useQuery,\r\n  useMutation,\r\n  useQueryClient,\r\n  QueryClient,\r\n  QueryClientProvider,\r\n} from 'react-query';\r\n\r\n// components\r\nimport Details from './components/Details';\r\nimport Navbar from './components/Navbar';\r\n\r\n// constants\r\nimport { repoList } from './common/constants';\r\n\r\nconst Wrapper = styled.section`\r\n  padding: 4em;\r\n  background: papayawhip;\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n`;\r\n\r\n// Create a client\r\nconst queryClient = new QueryClient();\r\n\r\nfunction App() {\r\n  const [repo, setRepo] = useState(repoList[0]);\r\n\r\n  const setNextRepo = (nextRepo) => {\r\n    setRepo(repoList[nextRepo]);\r\n  };\r\n\r\n  return (\r\n    <QueryClientProvider client={queryClient}>\r\n      <Wrapper>\r\n        <Navbar currentRepo={repo} setNextRepo={setNextRepo} />\r\n        <Details repo={repo} />\r\n      </Wrapper>\r\n    </QueryClientProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}