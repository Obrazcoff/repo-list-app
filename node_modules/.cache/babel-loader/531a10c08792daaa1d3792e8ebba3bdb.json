{"ast":null,"code":"import _regeneratorRuntime from\"D:/Work/Kitrum/2021/2021-11-05/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/Work/Kitrum/2021/2021-11-05/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{MAIN_API_URL}from'../common/constants';export var getDetails=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(repoName){var res,fullData,result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"\".concat(MAIN_API_URL).concat(repoName));case 2:res=_context.sent;if(res.ok){_context.next=5;break;}throw new Error('Network response was not ok');case 5:_context.next=7;return res.json();case 7:fullData=_context.sent;result={full_name:fullData.full_name,description:fullData.description,stargazers_count:fullData.stargazers_count};return _context.abrupt(\"return\",result);case 10:case\"end\":return _context.stop();}}},_callee);}));return function getDetails(_x){return _ref.apply(this,arguments);};}();","map":{"version":3,"sources":["D:/Work/Kitrum/2021/2021-11-05/my-app/src/api/getRequests.js"],"names":["MAIN_API_URL","getDetails","repoName","fetch","res","ok","Error","json","fullData","result","full_name","description","stargazers_count"],"mappings":"qTAAA,OAASA,YAAT,KAA6B,qBAA7B,CAEA,MAAO,IAAMC,CAAAA,UAAU,0FAAG,iBAAOC,QAAP,gKACNC,CAAAA,KAAK,WAAIH,YAAJ,SAAmBE,QAAnB,EADC,QAClBE,GADkB,kBAEnBA,GAAG,CAACC,EAFe,8BAGhB,IAAIC,CAAAA,KAAJ,CAAU,6BAAV,CAHgB,8BAKDF,CAAAA,GAAG,CAACG,IAAJ,EALC,QAKlBC,QALkB,eAMlBC,MANkB,CAMT,CACbC,SAAS,CAAEF,QAAQ,CAACE,SADP,CAEbC,WAAW,CAAEH,QAAQ,CAACG,WAFT,CAGbC,gBAAgB,CAAEJ,QAAQ,CAACI,gBAHd,CANS,iCAWjBH,MAXiB,yDAAH,kBAAVR,CAAAA,UAAU,4CAAhB","sourcesContent":["import { MAIN_API_URL } from '../common/constants';\r\n\r\nexport const getDetails = async (repoName) => {\r\n  const res = await fetch(`${MAIN_API_URL}${repoName}`);\r\n  if (!res.ok) {\r\n    throw new Error('Network response was not ok');\r\n  }\r\n  const fullData = await res.json();\r\n  const result = {\r\n    full_name: fullData.full_name,\r\n    description: fullData.description,\r\n    stargazers_count: fullData.stargazers_count,\r\n  };\r\n  return result;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}