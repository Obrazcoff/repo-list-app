{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\Kitrum\\\\2021\\\\2021-11-05\\\\my-app\\\\src\\\\components\\\\Details.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery } from 'react-query';\nimport styled from 'styled-components'; // api\n\nimport { getDetails } from '../api/getRequests'; // constants\n\nimport { spinnerUrl } from '../common/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Title = styled.h1`\n  font-size: 1.5em;\n  text-align: center;\n  color: palevioletred;\n`;\n_c = Title;\nconst DescLabel = styled.section`\n  font-weight: 700;\n`;\n_c2 = DescLabel;\nconst Wrapper = styled.section`\n  padding: 4em;\n  flex: 4;\n`;\n_c3 = Wrapper;\nconst LoadingMsg = styled.section`\n  color: blue;\n  font-weight: 700;\n  font-size: 1em;\n`;\n_c4 = LoadingMsg;\nconst ErrorMsg = styled.section`\n  color: red;\n  font-weight: 700;\n  font-size: 1.5em;\n`;\n_c5 = ErrorMsg;\n\nconst Details = _ref => {\n  _s();\n\n  let {\n    repo\n  } = _ref;\n  const {\n    data,\n    status\n  } = useQuery(['details', repo], () => getDetails(repo));\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"Repo details:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), status === 'success' && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(DescLabel, {\n          children: \"Repo name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), data === null || data === void 0 ? void 0 : data.full_name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(DescLabel, {\n          children: \"Description: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), data === null || data === void 0 ? void 0 : data.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(DescLabel, {\n          children: \"Count of stars: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), data === null || data === void 0 ? void 0 : data.stargazers_count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), status === 'loading' && /*#__PURE__*/_jsxDEV(LoadingMsg, {\n      children: [\"Loading...\", /*#__PURE__*/_jsxDEV(\"img\", {\n        src: spinnerUrl,\n        height: \"18px\",\n        width: \"18px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), status === 'error' && /*#__PURE__*/_jsxDEV(ErrorMsg, {\n      children: \"Error fetching data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Details, \"r91jLNwsqTqZNm64JWU7RjPAH/8=\", false, function () {\n  return [useQuery];\n});\n\n_c6 = Details;\nexport default Details;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Title\");\n$RefreshReg$(_c2, \"DescLabel\");\n$RefreshReg$(_c3, \"Wrapper\");\n$RefreshReg$(_c4, \"LoadingMsg\");\n$RefreshReg$(_c5, \"ErrorMsg\");\n$RefreshReg$(_c6, \"Details\");","map":{"version":3,"sources":["D:/Work/Kitrum/2021/2021-11-05/my-app/src/components/Details.js"],"names":["React","useQuery","styled","getDetails","spinnerUrl","Title","h1","DescLabel","section","Wrapper","LoadingMsg","ErrorMsg","Details","repo","data","status","full_name","description","stargazers_count"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;;AACA,SAASC,UAAT,QAA2B,oBAA3B,C,CAEA;;AACA,SAASC,UAAT,QAA2B,qBAA3B;;AAEA,MAAMC,KAAK,GAAGH,MAAM,CAACI,EAAG;AACxB;AACA;AACA;AACA,CAJA;KAAMD,K;AAMN,MAAME,SAAS,GAAGL,MAAM,CAACM,OAAQ;AACjC;AACA,CAFA;MAAMD,S;AAIN,MAAME,OAAO,GAAGP,MAAM,CAACM,OAAQ;AAC/B;AACA;AACA,CAHA;MAAMC,O;AAKN,MAAMC,UAAU,GAAGR,MAAM,CAACM,OAAQ;AAClC;AACA;AACA;AACA,CAJA;MAAME,U;AAMN,MAAMC,QAAQ,GAAGT,MAAM,CAACM,OAAQ;AAChC;AACA;AACA;AACA,CAJA;MAAMG,Q;;AAMN,MAAMC,OAAO,GAAG,QAAc;AAAA;;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;AAC5B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAmBd,QAAQ,CAAC,CAAC,SAAD,EAAYY,IAAZ,CAAD,EAAoB,MAAMV,UAAU,CAACU,IAAD,CAApC,CAAjC;AAEA,sBACE,QAAC,OAAD;AAAA,4BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGE,MAAM,KAAK,SAAX,iBACC;AAAA,8BACE;AAAA,gCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGD,IAFH,aAEGA,IAFH,uBAEGA,IAAI,CAAEE,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA,gCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGF,IAFH,aAEGA,IAFH,uBAEGA,IAAI,CAAEG,WAFT;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eASE;AAAA,gCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGH,IAFH,aAEGA,IAFH,uBAEGA,IAAI,CAAEI,gBAFT;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EAmBGH,MAAM,KAAK,SAAX,iBACC,QAAC,UAAD;AAAA,4CAEE;AAAK,QAAA,GAAG,EAAEX,UAAV;AAAsB,QAAA,MAAM,EAAC,MAA7B;AAAoC,QAAA,KAAK,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YApBJ,EA0BGW,MAAM,KAAK,OAAX,iBAAsB,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA1BzB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD,CAjCD;;GAAMH,O;UACqBX,Q;;;MADrBW,O;AAmCN,eAAeA,OAAf","sourcesContent":["import React from 'react';\r\nimport { useQuery } from 'react-query';\r\nimport styled from 'styled-components';\r\n\r\n// api\r\nimport { getDetails } from '../api/getRequests';\r\n\r\n// constants\r\nimport { spinnerUrl } from '../common/constants';\r\n\r\nconst Title = styled.h1`\r\n  font-size: 1.5em;\r\n  text-align: center;\r\n  color: palevioletred;\r\n`;\r\n\r\nconst DescLabel = styled.section`\r\n  font-weight: 700;\r\n`;\r\n\r\nconst Wrapper = styled.section`\r\n  padding: 4em;\r\n  flex: 4;\r\n`;\r\n\r\nconst LoadingMsg = styled.section`\r\n  color: blue;\r\n  font-weight: 700;\r\n  font-size: 1em;\r\n`;\r\n\r\nconst ErrorMsg = styled.section`\r\n  color: red;\r\n  font-weight: 700;\r\n  font-size: 1.5em;\r\n`;\r\n\r\nconst Details = ({ repo }) => {\r\n  const { data, status } = useQuery(['details', repo], () => getDetails(repo));\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Title>Repo details:</Title>\r\n      {status === 'success' && (\r\n        <ul>\r\n          <li>\r\n            <DescLabel>Repo name: </DescLabel>\r\n            {data?.full_name}\r\n          </li>\r\n          <li>\r\n            <DescLabel>Description: </DescLabel>\r\n            {data?.description}\r\n          </li>\r\n          <li>\r\n            <DescLabel>Count of stars: </DescLabel>\r\n            {data?.stargazers_count}\r\n          </li>\r\n        </ul>\r\n      )}\r\n\r\n      {status === 'loading' && (\r\n        <LoadingMsg>\r\n          Loading...\r\n          <img src={spinnerUrl} height=\"18px\" width=\"18px\"></img>\r\n        </LoadingMsg>\r\n      )}\r\n\r\n      {status === 'error' && <ErrorMsg>Error fetching data</ErrorMsg>}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Details;\r\n"]},"metadata":{},"sourceType":"module"}